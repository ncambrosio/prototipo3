# Application environment [pro|pre|dev]
yesshare.workingMode=dev

# Shutdown 
# There is also a /shutdown endpoint, but it's only visible by default via JMX. 
# To enable it as an HTTP endpoint, add endpoints.shutdown.enabled=true to your application.properties file. 
endpoints.shutdown.enabled=true

# ===============================
# = OAuth2 - Configuration
# ===============================
security.oauth2.client.clientId: 1846070458978797
security.oauth2.client.clientSecret: b8916948aa72dd7d8a190f951882ff00
security.oauth2.client.accessTokenUri: https://graph.facebook.com/oauth/access_token
security.oauth2.client.userAuthorizationUri: https://www.facebook.com/dialog/oauth
security.oauth2.client.tokenName: oauth_token
security.oauth2.client.authenticationScheme: query
security.oauth2.client.clientAuthenticationScheme: form
security.oauth2.resource.userInfoUri: https://graph.facebook.com/me
#security.oauth2.sso.login-path: /login
#security.oauth2.sso.home.secure: false
#security.oauth2.sso.home.path: /,/**/*.html

# ==============================================================
# = OAuth2 / Facebook - Configuration
# ==============================================================
facebook.client.clientId: 1846070458978797
facebook.client.clientSecret: b8916948aa72dd7d8a190f951882ff00
facebook.client.accessTokenUri: https://graph.facebook.com/oauth/access_token
facebook.client.userAuthorizationUri: https://www.facebook.com/dialog/oauth
facebook.client.tokenName: oauth_token
facebook.client.authenticationScheme: query
facebook.client.clientAuthenticationScheme: form
facebook.resource.userInfoUri: https://graph.facebook.com/me
facebook.login.path: /login/facebook
# ==============================================================
# = OAuth2 / Github - Configuration
# ==============================================================
github.client.clientId: 575c35bead756cdd32bf
github.client.clientSecret: beb985547a6e58e54eb44e92e5bff4e52d145a75
github.client.accessTokenUri: https://github.com/login/oauth/access_token
github.client.userAuthorizationUri: https://github.com/login/oauth/authorize
#github.client.tokenName: oauth_token
#github.client.authenticationScheme: form
github.client.clientAuthenticationScheme: form
github.resource.userInfoUri: https://api.github.com/user
github.login.path: /login/github    
# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# database init, supports mysql too
#yesshare.database=hsqldb
yesshare.database=mysql
spring.datasource.schema=classpath*:db/${yesshare.database}/schema.sql
spring.datasource.data=classpath*:db/${yesshare.database}/data.sql

# Connection url for the database "netgloo_blog"
spring.datasource.url = jdbc:mysql://localhost:3306/petclinic?useSSL=false

# Username and password
spring.datasource.username = root
spring.datasource.password = 1234

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = SPRING-SECURITY
# ===============================
security.user.name=admin
security.user.password=1234
# ===============================
# = SPRING-SESSION
# ===============================
#spring.session.store-type=none
#spring.session.store-type=jdbc
#spring.session.jdbc.table-name=SESSIONS

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
#spring.jpa.hibernate.ddl-auto=none
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming.strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# ===============================
# = MISCELLANEOUS
# ===============================

# Internationalization
spring.messages.basename=messages/messages

# Actuator / Management
management.contextPath=/manage

# Logging
logging.level.org.springframework=INFO

server.compression.enabled=true
server.compression.mime-types=application/json,text/css,application/javascript
server.compression.min-response-size=2048